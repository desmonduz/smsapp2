<Window x:Class="SMSApp.Views.SeasonAddView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:SMSApp.Converters"
        xmlns:itempicker="clr-namespace:SMSApp.Controls.ItemPicker"
        Title="Soil Reading Details"
        WindowStartupLocation="CenterScreen" ShowInTaskbar="False" SizeToContent="Height"  Width="800" Loaded="Window_Loaded">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Telerik.Windows.Controls;component/Themes/FontResources.xaml"/>
                <ResourceDictionary Source="/Styles/ValidationStyles.xaml"/>
                <ResourceDictionary Source="/Styles/ControlStyles.xaml"/>
                <ResourceDictionary Source="/Styles/Converters.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>
        <Label Grid.Row="0" HorizontalAlignment="Center" Margin="0 0 0 10" FontSize="16" FontWeight="Bold">Season Details</Label>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Label Grid.Column="0" Grid.Row="0">Year:</Label>
            <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding Model.Year, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>

            <Label Grid.Column="0" Grid.Row="1">Season:</Label>
            <ComboBox Grid.Column="1" Grid.Row="1" x:Name="cbxSeasons" SelectedItem="{Binding Model.SeasonTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>

            <Label Grid.Column="0" Grid.Row="2">Growth Status:</Label>
            <ComboBox Grid.Column="1" Grid.Row="2" x:Name="cbxGrowthStatus" SelectedItem="{Binding Model.GrowthStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>

            <Label Grid.Column="0" Grid.Row="3">Expected Yield:</Label>
            <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding Model.ExpectedYield,StringFormat=C, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>

            <Label Grid.Column="0" Grid.Row="4">Initial Investment:</Label>
            <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding Model.InitialInvestment,StringFormat=C, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"/>
            
            <Label Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5">Additional notes:</Label>
            <TextBox Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6" VerticalScrollBarVisibility="Auto"
                TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" Height="150" Width="Auto" VerticalAlignment="Top"
                Text="{Binding Model.AdditionalNotes, UpdateSourceTrigger=PropertyChanged}" Margin="3,2,2,0"/>

            <GroupBox  Grid.Column="2" Grid.ColumnSpan="2" Grid.RowSpan="7" Grid.Row="0" Header="Plants">
                <itempicker:ItemPickerControlView DataContext="{Binding PlantsPickerVwMdl}" />    
            </GroupBox>
        </Grid>
        <WrapPanel Grid.Row="2" Margin="5" HorizontalAlignment="Right">
            <Button Margin="0 0 10 0" Command="{Binding SaveCmd}">Save</Button>
            <!--Closing window is a View's task, so implement it inside View using event handler-->
            <Button Click="Button_Click">Cancel</Button>
        </WrapPanel>
    </Grid>

</Window>